 docker run  -d --name vault-server --cap-add=IPC_LOCK -e 'VAULT_DEV_ROOT_TOKEN_ID=myroot' -e 'VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200' vault
wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
sudo apt update && sudo apt install vault


spring.application.name=authentication-service
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://${MYSQL_URL:localhost}:${MYSQL_PORT:3306}/${MYSQL_DB:swa}?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username=${MYSQL_USER:root}
spring.datasource.password=${MYSQL_PASSWORD:password}
spring.datasource.hikari.initialization-fail-timeout=0
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.kafka.producer.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:127.0.0.1:9092}
spring.kafka.consumer.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:services-group}
spring.kafka.custom.enable-listeners=${KAFKA_ENABLE_LISTENERS:true}
spring.kafka.custom.tutor-signup-topic=${KAFKA_TUTOR_SIGNUP_TOPIC:tutor-signup-events}
spring.kafka.custom.student-signup-topic=${KAFKA_STUDENT_SIGNUP_TOPIC:student-signup-events}
spring.kafka.custom.reservation-topic=${KAFKA_RESERVATION_TOPIC:reservation-events}
spring.kafka.custom.student-detail-after-reservation-email-topic=${KAFKA_STUDENT_DETAIL_RESERVATION_TOPIC:student-detail-after-reservation-email-events}
spring.kafka.custom.reservation-approved-topic=${KAFKA_RESERVATION_APPROVED_TOPIC:reservation-approved-events}
spring.kafka.custom.reservation-approved-email-topic=${KAFKA_RESERVATION_APPROVED_EMAIL_TOPIC:reservation-approved-email-events}
spring.zipkin.enabled=${ZIPKIN_ENABLED:true}
spring.zipkin.base-url=${ZIPKIN_URL:http://localhost:9411/}
management.endpoints.web.exposure.include=*
server.port=8080
app.security.jwt.secret=${JWT_SECRET_KEY:secret}
app.security.jwt.expiry=100000

